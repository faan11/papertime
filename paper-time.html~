<!--
<link rel="import" href="../polymer/polymer.html">
<link rel="import" href="../iron-icon/iron-icon.html">
<link rel="import" href="../paper-dropdown-menu/paper-dropdown-menu.html">
<link rel="import" href="../paper-listbox/paper-listbox.html">
<link rel="import" href="../paper-icon-button/paper-icon-button.html">
<link rel="import" href="../paper-input/paper-input.html">
<link rel="import" href="../paper-card/paper-card.html">
<link rel="import" href="../iron-icons/communication-icons.html">
<link rel="import" href="../paper-time-picker/paper-time-picker.html">
-->

<link rel="import" href="../polymer/polymer.html">
<link rel="import" href="../iron-icon/iron-icon.html">
<link rel="import" href="../paper-dropdown-menu/paper-dropdown-menu.html">
<link rel="import" href="../paper-listbox/paper-listbox.html">
<link rel="import" href="../paper-icon-button/paper-icon-button.html">
<link rel="import" href="../paper-input/paper-input.html">
<link rel="import" href="../paper-card/paper-card.html">
<link rel="import" href="../paper-dialog/paper-dialog.html">
<link rel="import" href="../paper-button/paper-button.html">
<link rel="import" href="bower_components/paper-time-picker/paper-time-picker.html">
<link rel="import" href="../iron-icons/communication-icons.html">
<!--
<link rel="import" href="bower_components/polymer/polymer.html">
<link rel="import" href="bower_components/iron-icon/iron-icon.html">
<link rel="import" href="bower_components/paper-dropdown-menu/paper-dropdown-menu.html">
<link rel="import" href="bower_components/paper-listbox/paper-listbox.html">
<link rel="import" href="bower_components/paper-icon-button/paper-icon-button.html">
<link rel="import" href="bower_components/paper-input/paper-input.html">
<link rel="import" href="bower_components/paper-card/paper-card.html">
<link rel="import" href="bower_components/paper-dialog/paper-dialog.html">
<link rel="import" href="bower_components/paper-button/paper-button.html">
<link rel="import" href="bower_components/iron-icons/communication-icons.html">
<link rel="import" href="bower_components/paper-time-picker/paper-time-picker.html">
-->
<dom-module id="paper-time">


  <template>

    <style>
      /* local DOM styles go here */
      :host {
        
        }
        paper-listbox{
            width:100%;        
        }
        paper-input{
            width:100%;        
        }
        .flex2child {
          @apply(--layout-flex-2);
        }
        .container {
          @apply(--layout-horizontal);
          @apply(--layout-justified);
    
        }
     
        .flex-horizontal-with-ratios {
            @apply(--layout-horizontal);
        }
        .flex-horizontal {
        @apply(--layout-horizontal);
      }
      .flexchild {
        @apply(--layout-flex);
      }
      .card{
        padding-left: 0px;
        padding-right: 10px;      
      }
      .card paper-icon-button{
        position:relative;
        top:-8px;      
      }
      .card-content{
        padding-bottom: 0px;
        margin-bottom: 4px;
        padding-right: 0px;
        padding-top: 0px;      
        
      }
      .message-text{
            font-size:10px;      
      }
      .message-title{
            font-size:14px;
            font-weight: bold;  
            word-break: break-all;    
      }
      .cardmargin{
            margin-bottom: 7px;      
      }
      .profileimg{
			width:35px;
			height:35px;
			margin-bottom: 100%      
      
      }
      .message_text{
		    word-break: break-all;
		      
      
      }
      .data{
			width:100%      
      }
    </style>
    
    <!-- local DOM goes here -->
	 <paper-dialog id="timeDialog" modal class="paper-time-picker-dialog"
              on-iron-overlay-closed="dismissDialog" modal>
              <paper-time-picker id="timePicker" time="[[time]]" ></paper-time-picker>
              <div class="buttons">
                <paper-button  dialog-dismiss>Cancel</paper-button>
                <paper-button  on-tap="ok" dialog-confirm>OK</paper-button>
              </div>
 	</paper-dialog> 
 	 
    <div>
    <paper-input class="time" id="pinput" label="Orario"  value="{{start}}"  always-float-label>
		  <div class="suffix" id="suffix" suffix>{{end}}</div>
	 </paper-input>    
    </div>
   
  </template>

  <script>
  var time_state=false;
  var cele;
   Polymer({
    is: 'paper-time',
   
     properties: {
        start: {
            type: String,
            reflectToAttribute: true,
            notify: true
        },
        end: {
            type: String,
            reflectToAttribute: true,
            notify: true
        }    
      },
     listeners: {
        'pinput.tap': 'changetime'
      },

    close:function(e){
      var dialog=this.$.timeDialog;
      dialog.toggle();
    },
    ok:function(event){
        this.changeTimeData(event.target);
    },
    changeDay:function(event){
        var day=document.getElementById('day');
        day.value = event.target.innerText;
    },
        
    dismissDialog:function(element){

      if ((screen).width < 480 || (screen).height < 480) {
          //small screen, load other JS files
          this.ishidden = !this.ishidden;
      }

      if(time_state==false)
      {
        time_state=true;
      }
      else{
        //chiude timestamp
        
        time_state=false;
       
      }
    }, /**
	* When the date change.
	*/
    changetime:function(element) {
        var timeDialog=this.$.timeDialog;
        cele = element.target.parentNode;
        timeDialog.toggle();
        
        if ((screen).width < 480 || (screen).height < 480) {
            //small screen, load other JS files
            this.ishidden = !this.ishidden;
        }
		time_state = true;
	},
    changeTimeData:function(dialog){
      var time_today=(this.$.timePicker.time);
      time_now = this.parseTime(time_today,new Date());
      this.showTime(time_now,dialog);
  },
  
  parseTime: function(timeStr, dt) {
    if (!dt) {
        dt = new Date();
    }
 
    var time = timeStr.match(/(\d+)(?::(\d\d))?\s*(p?)/i);
    if (!time) {
        return NaN;
    }
    var hours = parseInt(time[1], 10);
    if (hours == 12 && !time[3]) {
        hours = 0;
    }
    else {
        hours += (hours < 12 && time[3]) ? 12 : 0;
    }
 
    dt.setHours(hours);
    dt.setMinutes(parseInt(time[2], 10) || 0);
    dt.setSeconds(0, 0);
    return dt;
  } ,
  setTime: function(current_time){
      time_now = current_time;
  },

 
  /**
  * This will change the date.
  */
  showTime:function(data,dialog){
    this.$.pinput.value = data.getHours()+":"+(data.getMinutes()==0?"00":data.getMinutes());
   data.setHours(data.getHours()+2);
   this.$.suffix.innerHTML = "- "+data.getHours()+":"+(data.getMinutes()==0?"00":data.getMinutes());
  }
    
  }
  );
 
  </script>

</dom-module>

